#!/usr/bin/env ruby
require 'gli'
require 'mmw'
require 'rubygems'
include GLI::App

PROJECT_DIR = File.expand_path('~/My-Project')

class App
  extend GLI::App

  program_desc 'Write and produce music'

  version Mmw::VERSION

  subcommand_option_handling :normal

  desc 'Path to the project folder'
  default_value PROJECT_DIR
  arg_name 'project_folder'
  flag [:f,:foldername]

  desc 'Describe create here'
  arg_name 'Describe arguments to create here'
  command :create do |c|
    c.desc 'Describe a switch to create'
    c.switch :s

    c.desc 'Specify project filepath'
    c.default_value '~/.'
    c.flag :f
    c.action do |global_options,options,args|

      # Your command logic here

      # If you have any errors, just raise them
      # raise "that command made no sense"

      puts "create command ran"
    end
  end

  desc 'Describe score here'
  arg_name 'Describe arguments to score here'
  command :score do |c|
    c.action do |global_options,options,args|
      puts "score command ran"
    end
  end

  desc 'Describe clear here'
  arg_name 'Describe arguments to clear here'
  command :clear do |c|
    c.action do |global_options,options,args|
      puts "clear command ran"
    end
  end

  pre do |global,command,options,args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global,command,options,args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
